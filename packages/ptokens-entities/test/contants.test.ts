import { ChainId, Blockchain, Network, chainIdToBlockchain } from '../src/constants'

describe('chainIdToBlockchain', () => {
  test('Should get correct blockchain and network', () => {
    let res = chainIdToBlockchain.get(ChainId.AlgorandMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Algorand, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.ArbitrumMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Arbitrum, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.BitcoinMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Bitcoin, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.BitcoinTestnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Bitcoin, network: Network.Testnet })
    res = chainIdToBlockchain.get(ChainId.BscMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Bsc, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.EosJungle)
    expect(res).toStrictEqual({ blockchain: Blockchain.Eos, network: Network.Jungle })
    res = chainIdToBlockchain.get(ChainId.EosMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Eos, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.EthereumMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Ethereum, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.EthereumRinkeby)
    expect(res).toStrictEqual({ blockchain: Blockchain.Ethereum, network: Network.Rinkeby })
    res = chainIdToBlockchain.get(ChainId.EthereumRopsten)
    expect(res).toStrictEqual({ blockchain: Blockchain.Ethereum, network: Network.Ropsten })
    res = chainIdToBlockchain.get(ChainId.FantomMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Fantom, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.FioMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Fio, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.LibreMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Libre, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.LibreTestnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Libre, network: Network.Testnet })
    res = chainIdToBlockchain.get(ChainId.LuxochainMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Luxochain, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.PolygonMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Polygon, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.TelosMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Telos, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.UltraMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Ultra, network: Network.Mainnet })
    res = chainIdToBlockchain.get(ChainId.UltraTestnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Ultra, network: Network.Testnet })
    res = chainIdToBlockchain.get(ChainId.XdaiMainnet)
    expect(res).toStrictEqual({ blockchain: Blockchain.Xdai, network: Network.Mainnet })
  })
})
